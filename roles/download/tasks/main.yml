# tasks file for ansible_aap_download
---

- name: offline_token validation
  ansible.builtin.assert:
    that:
      - offline_token is defined
      - offline_token | length > 0
    fail_msg: "Erro: A variável 'offline_token' não está definida ou está vazia!"
    success_msg: "A variável 'offline_token' está definida corretamente." 

- name: aap_bundle_sha_value validation
  ansible.builtin.assert:
    that:
      - aap_bundle_sha_value is defined
      - aap_bundle_sha_value | length > 0
    fail_msg: "Erro: A variável 'aap_bundle_sha_value' não está definida ou está vazia!"
    success_msg: "A variável 'aap_bundle_sha_value' está definida corretamente." 

- name: Criando diretorio do AAP
  ansible.builtin.file:
    path: /opt/aap/
    state: directory
    mode: '0755'
    owner: "{{ item.name }}"
    group: "{{ item.name }}"
  with_items: "{{ user_info }}"

- name: Checkfile
  ansible.builtin.stat:
    path: "/{{ item.home }}/aap.tar.gz"
    checksum_algorithm: sha256
  with_items: "{{ user_info }}"
  register: bundle_file

- name: Check file
  ansible.builtin.assert:
    that:
      - aap_bundle_sha_value is defined
      - offline_token is defined
    fail_msg: "As variaves aap_bundle_sha_value e offline_token nao foram configuradas"
    success_msg: "Variaveis OK"

- name: DEBUG file
  ansible.builtin.debug:
    var: item.stat.exists
  with_items: "{{ bundle_file.results }}"

- name: Ensure we have a access token the Red Hat Customer portal
  ansible.builtin.uri:
    url: https://sso.redhat.com/auth/realms/redhat-external/protocol/openid-connect/token
    method: POST
    body_format: form-urlencoded
    return_content: true
    mode: '0644'
    body:
      grant_type: refresh_token
      client_id: rhsm-api
      refresh_token: "{{ offline_token }}"
  when: (item.stat.exists is false) or (item.stat.checksum != aap_bundle_sha_value)
  register: access_token
  until: access_token is not failed
  retries: 1
  delay: 20
  with_items: "{{ bundle_file.results }}"

- name: DEBUG
  ansible.builtin.debug:
    var: access_token 

- name: Ensure we have the AAP bundle
  ansible.builtin.get_url:
    url: https://api.access.redhat.com/management/v1/images/{{ aap_bundle_sha_value }}/download
    headers:
      accept: application/json
      Authorization: Bearer {{ item.1.json.access_token }}
    dest: "/{{ item.0.home }}/aap.tar.gz"
    checksum: "sha256: {{ aap_bundle_sha_value }}"
  with_together: 
    - "{{ user_info }}"
    - "{{ access_token.results }}"
  when:
    - (item.1.json.access_token is defined)
  register: download_aap_tarball
  until: download_aap_tarball is not failed
  retries: 15
  delay: 20

- name: Check file
  with_items: "{{ bundle_file.results }}"
  ansible.builtin.assert:
    that:
      - item.stat.exists == true
      - item.stat.checksum == aap_bundle_sha_value
    fail_msg: "O arquivo não existe ou o checksum não corresponde."
    success_msg: "O arquivo existe e o checksum corresponde."

- name: Extraindo arquivos na pasta de destino
  ansible.builtin.unarchive:
    src: "/{{ item.0.home }}/aap.tar.gz"
    dest: /opt/aap/
    owner: "{{ item.0.name }}"
    group: "{{ item.0.name }}"
    list_files: true
    extra_opts: [--strip-components=1]
    remote_src: true
  with_together:
    - "{{ user_info }}"
    - "{{ bundle_file.results }}"
  when: item.1.stat.checksum == aap_bundle_sha_value
